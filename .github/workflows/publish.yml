name: Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version_increment:
        description: 'Version increment type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
          poetry config repositories.pypi-uml-mcp https://upload.pypi.org/legacy/
          poetry config pypi-token.pypi-uml-mcp ${{ secrets.PYPI_API_TOKEN }}

      - name: Install dependencies
        run: poetry install

      - name: Bump version if manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          poetry version ${{ github.event.inputs.version_increment }}
          VERSION=$(poetry version -s)
          echo "Version bumped to $VERSION"
          
          # Update version in config
          VERSION_FILE="mcp/core/config.py"
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" $VERSION_FILE
          
          # Commit version change
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add $VERSION_FILE pyproject.toml
          git commit -m "Bump version to $VERSION"
          git tag -a "v$VERSION" -m "Version $VERSION"
          git push origin main --tags

      - name: Build and publish package
        run: |
          poetry build
          poetry publish -r pypi-uml-mcp

      - name: Create release artifact
        uses: actions/upload-artifact@v4
        with:
          name: uml-mcp-package
          path: dist/
